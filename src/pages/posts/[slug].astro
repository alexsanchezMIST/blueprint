---
import Layout from "../../layouts/Layout.astro";
import Section from "../../components/Section.astro";
import Container from "../../components/Container.astro";
import Article from "../../components/Article.astro";
import ShareButtons from "../../components/ShareButtons.astro";
import PostCard from "../../components/PostCard.astro";
import CTA from "../../components/CTA.astro";

import { getAllPosts, getPost, getRelatedPosts } from "../../lib/queries.js";

export async function getStaticPaths() {
  const posts = await getAllPosts();
  return posts.edges.map(({ node }) => {
    return {
      params: { slug: node.slug },
    };
  });
}

const { slug } = Astro.params;
const post = await getPost(slug);

const postCategories = post.categories.nodes.map((post) => {
  return post.name;
});

const postCategory = postCategories[0];

const relatedPosts = await getRelatedPosts(postCategory);
---

<Layout>
  <Section>
    <Container>
      <div class="post--heading--wrapper">
        <h1 class="post--heading">{post.title}</h1>
        {post.excerpt && <p class="post--excerpt">{post.excerpt}</p>}
      </div>
    </Container>
  </Section>
  {post.featuredImage && (
    <section>
      <img
        src={post.featuredImage.node.sourceUrl}
        alt={post.featuredImage.node.altText}
        class="post--thumbnail"
      />
    </section>
  )}
  <Section>
    <Container>
      <div class="flex--center">
        <div class="article--wrapper">
          <Article set:html={post.content} />
          <ShareButtons slug={slug} />
        </div>
      </div>
    </Container>
  </Section>
  <Section>
    <Container>
      <h2 class="related--posts--heading">Related Posts</h2>
      <div class="related--posts--wrapper">
        {relatedPosts.edges.map(
          (post) =>
            post.node.featuredImage && (
              <PostCard
                src={post.node.featuredImage.node.sourceUrl}
                href={`/posts/${post.node.slug}`}
                title={post.node.title}
                excerpt={`${post.node.excerpt.slice(0, 120)}...`}
              />
            )
        )}
      </div>
    </Container>
  </Section>
  <CTA />
</Layout>

<style lang="scss">
  @import "../../styles/variables.scss";

  .post--heading--wrapper {
    width: min(100%, 48.125rem);
    margin-inline: auto;
    text-align: center;
  }

  .post--heading {
    margin-bottom: map-get($spacing, "200");
  }

  .post--thumbnail {
    margin-inline: auto;
    width: min(100vw, 96.875rem);
    height: auto;
    object-fit: cover;
    aspect-ratio: 16 / 9;
  }

  .flex--center {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
  }

  .article--wrapper {
    display: inline-block;
    margin-inline: auto;
    padding: map-get($spacing, "600");
    background-color: $white;
    border: 1px solid map-get($neutrals, "50");
    border-radius: 0.25rem;
    box-shadow: 0 4px 6px -1px rgba($black, 0.1),
      0 2px 4px -2px rgba($black, 0.1);
  }

  .related--posts--heading {
    margin-bottom: map-get($spacing, "800");
    text-align: center;
  }

  .related--posts--wrapper {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    grid-template-rows: repeat(3, minmax(0, min-content));
    gap: map-get($spacing, "600");

    @media screen and (min-width: map-get($breakpoints, "md")) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
      grid-template-rows: repeat(1, minmax(0, 1fr));
    }
  }
</style>
